// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: examples/validation.proto

package examples

import (
	_ "github.com/cybozu/protobuf/cybozu/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Enums_Enum int32

const (
	Enums_E_UNSPECIFIED Enums_Enum = 0
	Enums_E_VAL1        Enums_Enum = 1
	Enums_E_VAL100      Enums_Enum = 100
)

// Enum value maps for Enums_Enum.
var (
	Enums_Enum_name = map[int32]string{
		0:   "E_UNSPECIFIED",
		1:   "E_VAL1",
		100: "E_VAL100",
	}
	Enums_Enum_value = map[string]int32{
		"E_UNSPECIFIED": 0,
		"E_VAL1":        1,
		"E_VAL100":      100,
	}
)

func (x Enums_Enum) Enum() *Enums_Enum {
	p := new(Enums_Enum)
	*p = x
	return p
}

func (x Enums_Enum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Enums_Enum) Descriptor() protoreflect.EnumDescriptor {
	return file_examples_validation_proto_enumTypes[0].Descriptor()
}

func (Enums_Enum) Type() protoreflect.EnumType {
	return &file_examples_validation_proto_enumTypes[0]
}

func (x Enums_Enum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Enums_Enum.Descriptor instead.
func (Enums_Enum) EnumDescriptor() ([]byte, []int) {
	return file_examples_validation_proto_rawDescGZIP(), []int{6, 0}
}

// This message is marked ignored, so no validation method is generated.
type Ignored struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Foo string `protobuf:"bytes,1,opt,name=foo,proto3" json:"foo,omitempty"`
	Bar int32  `protobuf:"varint,2,opt,name=bar,proto3" json:"bar,omitempty"` // no effect
}

func (x *Ignored) Reset() {
	*x = Ignored{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_validation_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ignored) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ignored) ProtoMessage() {}

func (x *Ignored) ProtoReflect() protoreflect.Message {
	mi := &file_examples_validation_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ignored.ProtoReflect.Descriptor instead.
func (*Ignored) Descriptor() ([]byte, []int) {
	return file_examples_validation_proto_rawDescGZIP(), []int{0}
}

func (x *Ignored) GetFoo() string {
	if x != nil {
		return x.Foo
	}
	return ""
}

func (x *Ignored) GetBar() int32 {
	if x != nil {
		return x.Bar
	}
	return 0
}

// All scalar types can have constraint rules except for bools.
type Scalars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Float    float32 `protobuf:"fixed32,1,opt,name=float,proto3" json:"float,omitempty"`
	Double   float64 `protobuf:"fixed64,2,opt,name=double,proto3" json:"double,omitempty"`
	Int32    int32   `protobuf:"varint,3,opt,name=int32,proto3" json:"int32,omitempty"`
	Int64    int64   `protobuf:"varint,4,opt,name=int64,proto3" json:"int64,omitempty"`
	Uint32   uint32  `protobuf:"varint,5,opt,name=uint32,proto3" json:"uint32,omitempty"`
	Uint64   uint64  `protobuf:"varint,6,opt,name=uint64,proto3" json:"uint64,omitempty"`
	Sint32   int32   `protobuf:"zigzag32,7,opt,name=sint32,proto3" json:"sint32,omitempty"`
	Sint64   int64   `protobuf:"zigzag64,8,opt,name=sint64,proto3" json:"sint64,omitempty"`
	Fixed32  uint32  `protobuf:"fixed32,9,opt,name=fixed32,proto3" json:"fixed32,omitempty"`
	Fixed64  uint64  `protobuf:"fixed64,10,opt,name=fixed64,proto3" json:"fixed64,omitempty"`
	Sfixed32 int32   `protobuf:"fixed32,11,opt,name=sfixed32,proto3" json:"sfixed32,omitempty"`
	Sfixed64 int64   `protobuf:"fixed64,12,opt,name=sfixed64,proto3" json:"sfixed64,omitempty"`
	Bool     bool    `protobuf:"varint,13,opt,name=bool,proto3" json:"bool,omitempty"` // no available rules for bools
	String_  string  `protobuf:"bytes,14,opt,name=string,proto3" json:"string,omitempty"`
	Bytes    []byte  `protobuf:"bytes,15,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *Scalars) Reset() {
	*x = Scalars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_validation_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scalars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scalars) ProtoMessage() {}

func (x *Scalars) ProtoReflect() protoreflect.Message {
	mi := &file_examples_validation_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scalars.ProtoReflect.Descriptor instead.
func (*Scalars) Descriptor() ([]byte, []int) {
	return file_examples_validation_proto_rawDescGZIP(), []int{1}
}

func (x *Scalars) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

func (x *Scalars) GetDouble() float64 {
	if x != nil {
		return x.Double
	}
	return 0
}

func (x *Scalars) GetInt32() int32 {
	if x != nil {
		return x.Int32
	}
	return 0
}

func (x *Scalars) GetInt64() int64 {
	if x != nil {
		return x.Int64
	}
	return 0
}

func (x *Scalars) GetUint32() uint32 {
	if x != nil {
		return x.Uint32
	}
	return 0
}

func (x *Scalars) GetUint64() uint64 {
	if x != nil {
		return x.Uint64
	}
	return 0
}

func (x *Scalars) GetSint32() int32 {
	if x != nil {
		return x.Sint32
	}
	return 0
}

func (x *Scalars) GetSint64() int64 {
	if x != nil {
		return x.Sint64
	}
	return 0
}

func (x *Scalars) GetFixed32() uint32 {
	if x != nil {
		return x.Fixed32
	}
	return 0
}

func (x *Scalars) GetFixed64() uint64 {
	if x != nil {
		return x.Fixed64
	}
	return 0
}

func (x *Scalars) GetSfixed32() int32 {
	if x != nil {
		return x.Sfixed32
	}
	return 0
}

func (x *Scalars) GetSfixed64() int64 {
	if x != nil {
		return x.Sfixed64
	}
	return 0
}

func (x *Scalars) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

func (x *Scalars) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *Scalars) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

// rules for optional fields are enforced only if the field is set.
type OptionalScalars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Float    *float32 `protobuf:"fixed32,1,opt,name=float,proto3,oneof" json:"float,omitempty"`
	Double   *float64 `protobuf:"fixed64,2,opt,name=double,proto3,oneof" json:"double,omitempty"`
	Int32    *int32   `protobuf:"varint,3,opt,name=int32,proto3,oneof" json:"int32,omitempty"`
	Int64    *int64   `protobuf:"varint,4,opt,name=int64,proto3,oneof" json:"int64,omitempty"`
	Uint32   *uint32  `protobuf:"varint,5,opt,name=uint32,proto3,oneof" json:"uint32,omitempty"`
	Uint64   *uint64  `protobuf:"varint,6,opt,name=uint64,proto3,oneof" json:"uint64,omitempty"`
	Sint32   *int32   `protobuf:"zigzag32,7,opt,name=sint32,proto3,oneof" json:"sint32,omitempty"`
	Sint64   *int64   `protobuf:"zigzag64,8,opt,name=sint64,proto3,oneof" json:"sint64,omitempty"`
	Fixed32  *uint32  `protobuf:"fixed32,9,opt,name=fixed32,proto3,oneof" json:"fixed32,omitempty"`
	Fixed64  *uint64  `protobuf:"fixed64,10,opt,name=fixed64,proto3,oneof" json:"fixed64,omitempty"`
	Sfixed32 *int32   `protobuf:"fixed32,11,opt,name=sfixed32,proto3,oneof" json:"sfixed32,omitempty"`
	Sfixed64 *int64   `protobuf:"fixed64,12,opt,name=sfixed64,proto3,oneof" json:"sfixed64,omitempty"`
	Bool     *bool    `protobuf:"varint,13,opt,name=bool,proto3,oneof" json:"bool,omitempty"` // no available rules for bool
	String_  *string  `protobuf:"bytes,14,opt,name=string,proto3,oneof" json:"string,omitempty"`
	Bytes    []byte   `protobuf:"bytes,15,opt,name=bytes,proto3,oneof" json:"bytes,omitempty"`
}

func (x *OptionalScalars) Reset() {
	*x = OptionalScalars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_validation_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalScalars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalScalars) ProtoMessage() {}

func (x *OptionalScalars) ProtoReflect() protoreflect.Message {
	mi := &file_examples_validation_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalScalars.ProtoReflect.Descriptor instead.
func (*OptionalScalars) Descriptor() ([]byte, []int) {
	return file_examples_validation_proto_rawDescGZIP(), []int{2}
}

func (x *OptionalScalars) GetFloat() float32 {
	if x != nil && x.Float != nil {
		return *x.Float
	}
	return 0
}

func (x *OptionalScalars) GetDouble() float64 {
	if x != nil && x.Double != nil {
		return *x.Double
	}
	return 0
}

func (x *OptionalScalars) GetInt32() int32 {
	if x != nil && x.Int32 != nil {
		return *x.Int32
	}
	return 0
}

func (x *OptionalScalars) GetInt64() int64 {
	if x != nil && x.Int64 != nil {
		return *x.Int64
	}
	return 0
}

func (x *OptionalScalars) GetUint32() uint32 {
	if x != nil && x.Uint32 != nil {
		return *x.Uint32
	}
	return 0
}

func (x *OptionalScalars) GetUint64() uint64 {
	if x != nil && x.Uint64 != nil {
		return *x.Uint64
	}
	return 0
}

func (x *OptionalScalars) GetSint32() int32 {
	if x != nil && x.Sint32 != nil {
		return *x.Sint32
	}
	return 0
}

func (x *OptionalScalars) GetSint64() int64 {
	if x != nil && x.Sint64 != nil {
		return *x.Sint64
	}
	return 0
}

func (x *OptionalScalars) GetFixed32() uint32 {
	if x != nil && x.Fixed32 != nil {
		return *x.Fixed32
	}
	return 0
}

func (x *OptionalScalars) GetFixed64() uint64 {
	if x != nil && x.Fixed64 != nil {
		return *x.Fixed64
	}
	return 0
}

func (x *OptionalScalars) GetSfixed32() int32 {
	if x != nil && x.Sfixed32 != nil {
		return *x.Sfixed32
	}
	return 0
}

func (x *OptionalScalars) GetSfixed64() int64 {
	if x != nil && x.Sfixed64 != nil {
		return *x.Sfixed64
	}
	return 0
}

func (x *OptionalScalars) GetBool() bool {
	if x != nil && x.Bool != nil {
		return *x.Bool
	}
	return false
}

func (x *OptionalScalars) GetString_() string {
	if x != nil && x.String_ != nil {
		return *x.String_
	}
	return ""
}

func (x *OptionalScalars) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type RepeatedScalars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a repeated field can specify `repeated` constraints like this
	Float []float32 `protobuf:"fixed32,1,rep,packed,name=float,proto3" json:"float,omitempty"`
	// or this
	Double []float64 `protobuf:"fixed64,2,rep,packed,name=double,proto3" json:"double,omitempty"`
	// or this.
	String_ []string `protobuf:"bytes,3,rep,name=string,proto3" json:"string,omitempty"`
}

func (x *RepeatedScalars) Reset() {
	*x = RepeatedScalars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_validation_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RepeatedScalars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedScalars) ProtoMessage() {}

func (x *RepeatedScalars) ProtoReflect() protoreflect.Message {
	mi := &file_examples_validation_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedScalars.ProtoReflect.Descriptor instead.
func (*RepeatedScalars) Descriptor() ([]byte, []int) {
	return file_examples_validation_proto_rawDescGZIP(), []int{3}
}

func (x *RepeatedScalars) GetFloat() []float32 {
	if x != nil {
		return x.Float
	}
	return nil
}

func (x *RepeatedScalars) GetDouble() []float64 {
	if x != nil {
		return x.Double
	}
	return nil
}

func (x *RepeatedScalars) GetString_() []string {
	if x != nil {
		return x.String_
	}
	return nil
}

// Strings have the richest set of constraint rules.
type Strings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// NFC normalization is applied if no options are given.
	S1 string `protobuf:"bytes,1,opt,name=s1,proto3" json:"s1,omitempty"`
	// normalize into the NFD form.
	S2 string `protobuf:"bytes,2,opt,name=s2,proto3" json:"s2,omitempty"`
	// enforce the minimum length of the string if the string is NOT empty.
	// This check is done after NFC normalization.
	S3 string `protobuf:"bytes,3,opt,name=s3,proto3" json:"s3,omitempty"`
	// normalize and validate the string with a PRECIS profile.
	S4 string `protobuf:"bytes,4,opt,name=s4,proto3" json:"s4,omitempty"`
	// normalize and validate the string with a PRECIS profile.
	S5 string `protobuf:"bytes,5,opt,name=s5,proto3" json:"s5,omitempty"`
	// normalize and validate the string with a PRECIS profile.
	S6 string `protobuf:"bytes,6,opt,name=s6,proto3" json:"s6,omitempty"`
	// enforce that the string matches a regular expresson. The regular expression syntax is RE2.
	// See https://github.com/google/re2/wiki/Syntax
	S7 string `protobuf:"bytes,7,opt,name=s7,proto3" json:"s7,omitempty"`
	// enforce that the string is a valid email address as defined in RFC 5322.
	S8 string `protobuf:"bytes,8,opt,name=s8,proto3" json:"s8,omitempty"`
	// enforce that the string is a valid URI as defined in RFC 3986.
	// The string will also be canonicalized.
	S9 string `protobuf:"bytes,9,opt,name=s9,proto3" json:"s9,omitempty"`
	// enforce that the string is a valid telephone number as defined by E.164.
	// An example is "+81-80-0000-0000".
	S10 string `protobuf:"bytes,10,opt,name=s10,proto3" json:"s10,omitempty"`
}

func (x *Strings) Reset() {
	*x = Strings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_validation_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Strings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Strings) ProtoMessage() {}

func (x *Strings) ProtoReflect() protoreflect.Message {
	mi := &file_examples_validation_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Strings.ProtoReflect.Descriptor instead.
func (*Strings) Descriptor() ([]byte, []int) {
	return file_examples_validation_proto_rawDescGZIP(), []int{4}
}

func (x *Strings) GetS1() string {
	if x != nil {
		return x.S1
	}
	return ""
}

func (x *Strings) GetS2() string {
	if x != nil {
		return x.S2
	}
	return ""
}

func (x *Strings) GetS3() string {
	if x != nil {
		return x.S3
	}
	return ""
}

func (x *Strings) GetS4() string {
	if x != nil {
		return x.S4
	}
	return ""
}

func (x *Strings) GetS5() string {
	if x != nil {
		return x.S5
	}
	return ""
}

func (x *Strings) GetS6() string {
	if x != nil {
		return x.S6
	}
	return ""
}

func (x *Strings) GetS7() string {
	if x != nil {
		return x.S7
	}
	return ""
}

func (x *Strings) GetS8() string {
	if x != nil {
		return x.S8
	}
	return ""
}

func (x *Strings) GetS9() string {
	if x != nil {
		return x.S9
	}
	return ""
}

func (x *Strings) GetS10() string {
	if x != nil {
		return x.S10
	}
	return ""
}

// In addition to the validation code generated from the protobuf options,
// this message implements a custom validation. See `example_custom.go`
// in the same directory.
type Maps struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// you can put a constraint for map and a constraint for the value type as follows.
	Map1 map[string]int32 `protobuf:"bytes,1,rep,name=map1,proto3" json:"map1,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// or either one of them. The following enforces that the timestamp is set.
	Map2 map[string]*timestamppb.Timestamp `protobuf:"bytes,2,rep,name=map2,proto3" json:"map2,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// string values are normalized into the NFC form even if there's no rules specified.
	Map3 map[uint32]string `protobuf:"bytes,3,rep,name=map3,proto3" json:"map3,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// if the map key is a string, it is normalized into the NFC.
	// if the map vakue is a message, fields in it are always normalized/validated.
	Map4 map[string]*Scalars `protobuf:"bytes,4,rep,name=map4,proto3" json:"map4,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Maps) Reset() {
	*x = Maps{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_validation_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Maps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Maps) ProtoMessage() {}

func (x *Maps) ProtoReflect() protoreflect.Message {
	mi := &file_examples_validation_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Maps.ProtoReflect.Descriptor instead.
func (*Maps) Descriptor() ([]byte, []int) {
	return file_examples_validation_proto_rawDescGZIP(), []int{5}
}

func (x *Maps) GetMap1() map[string]int32 {
	if x != nil {
		return x.Map1
	}
	return nil
}

func (x *Maps) GetMap2() map[string]*timestamppb.Timestamp {
	if x != nil {
		return x.Map2
	}
	return nil
}

func (x *Maps) GetMap3() map[uint32]string {
	if x != nil {
		return x.Map3
	}
	return nil
}

func (x *Maps) GetMap4() map[string]*Scalars {
	if x != nil {
		return x.Map4
	}
	return nil
}

type Enums struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// enforces that `e1` is not the zero value.
	E1 Enums_Enum `protobuf:"varint,1,opt,name=e1,proto3,enum=examples.Enums_Enum" json:"e1,omitempty"`
	// enforces that `e2` is one of the defined enum value.
	E2 Enums_Enum `protobuf:"varint,2,opt,name=e2,proto3,enum=examples.Enums_Enum" json:"e2,omitempty"`
	// enforces that `e3` is one of the defined enum value other than zero.
	E3 []Enums_Enum `protobuf:"varint,3,rep,packed,name=e3,proto3,enum=examples.Enums_Enum" json:"e3,omitempty"`
	// enforces that `e4` is, if given, one of the defined enum value other than zero.
	E4 *Enums_Enum `protobuf:"varint,4,opt,name=e4,proto3,enum=examples.Enums_Enum,oneof" json:"e4,omitempty"`
}

func (x *Enums) Reset() {
	*x = Enums{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_validation_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Enums) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enums) ProtoMessage() {}

func (x *Enums) ProtoReflect() protoreflect.Message {
	mi := &file_examples_validation_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enums.ProtoReflect.Descriptor instead.
func (*Enums) Descriptor() ([]byte, []int) {
	return file_examples_validation_proto_rawDescGZIP(), []int{6}
}

func (x *Enums) GetE1() Enums_Enum {
	if x != nil {
		return x.E1
	}
	return Enums_E_UNSPECIFIED
}

func (x *Enums) GetE2() Enums_Enum {
	if x != nil {
		return x.E2
	}
	return Enums_E_UNSPECIFIED
}

func (x *Enums) GetE3() []Enums_Enum {
	if x != nil {
		return x.E3
	}
	return nil
}

func (x *Enums) GetE4() Enums_Enum {
	if x != nil && x.E4 != nil {
		return *x.E4
	}
	return Enums_E_UNSPECIFIED
}

type Oneofs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to O1:
	//
	//	*Oneofs_Int32
	//	*Oneofs_String_
	O1 isOneofs_O1 `protobuf_oneof:"o1"`
	// Types that are assignable to O2:
	//
	//	*Oneofs_Ts
	//	*Oneofs_Bool
	O2 isOneofs_O2 `protobuf_oneof:"o2"`
}

func (x *Oneofs) Reset() {
	*x = Oneofs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_validation_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Oneofs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Oneofs) ProtoMessage() {}

func (x *Oneofs) ProtoReflect() protoreflect.Message {
	mi := &file_examples_validation_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Oneofs.ProtoReflect.Descriptor instead.
func (*Oneofs) Descriptor() ([]byte, []int) {
	return file_examples_validation_proto_rawDescGZIP(), []int{7}
}

func (m *Oneofs) GetO1() isOneofs_O1 {
	if m != nil {
		return m.O1
	}
	return nil
}

func (x *Oneofs) GetInt32() int32 {
	if x, ok := x.GetO1().(*Oneofs_Int32); ok {
		return x.Int32
	}
	return 0
}

func (x *Oneofs) GetString_() string {
	if x, ok := x.GetO1().(*Oneofs_String_); ok {
		return x.String_
	}
	return ""
}

func (m *Oneofs) GetO2() isOneofs_O2 {
	if m != nil {
		return m.O2
	}
	return nil
}

func (x *Oneofs) GetTs() *timestamppb.Timestamp {
	if x, ok := x.GetO2().(*Oneofs_Ts); ok {
		return x.Ts
	}
	return nil
}

func (x *Oneofs) GetBool() bool {
	if x, ok := x.GetO2().(*Oneofs_Bool); ok {
		return x.Bool
	}
	return false
}

type isOneofs_O1 interface {
	isOneofs_O1()
}

type Oneofs_Int32 struct {
	Int32 int32 `protobuf:"varint,1,opt,name=int32,proto3,oneof"`
}

type Oneofs_String_ struct {
	String_ string `protobuf:"bytes,2,opt,name=string,proto3,oneof"`
}

func (*Oneofs_Int32) isOneofs_O1() {}

func (*Oneofs_String_) isOneofs_O1() {}

type isOneofs_O2 interface {
	isOneofs_O2()
}

type Oneofs_Ts struct {
	Ts *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=ts,proto3,oneof"`
}

type Oneofs_Bool struct {
	Bool bool `protobuf:"varint,4,opt,name=bool,proto3,oneof"`
}

func (*Oneofs_Ts) isOneofs_O2() {}

func (*Oneofs_Bool) isOneofs_O2() {}

// message type fields are normalized/validated recursively.
type Composed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// enforces that `ignored` is set.
	Ignored *Ignored `protobuf:"bytes,1,opt,name=ignored,proto3" json:"ignored,omitempty"`
	Scalars *Scalars `protobuf:"bytes,2,opt,name=scalars,proto3" json:"scalars,omitempty"`
	Maps    []*Maps  `protobuf:"bytes,3,rep,name=maps,proto3" json:"maps,omitempty"`
	// enforces that all messages in `enums` are set.
	Enums []*Enums `protobuf:"bytes,4,rep,name=enums,proto3" json:"enums,omitempty"`
}

func (x *Composed) Reset() {
	*x = Composed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_examples_validation_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Composed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Composed) ProtoMessage() {}

func (x *Composed) ProtoReflect() protoreflect.Message {
	mi := &file_examples_validation_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Composed.ProtoReflect.Descriptor instead.
func (*Composed) Descriptor() ([]byte, []int) {
	return file_examples_validation_proto_rawDescGZIP(), []int{8}
}

func (x *Composed) GetIgnored() *Ignored {
	if x != nil {
		return x.Ignored
	}
	return nil
}

func (x *Composed) GetScalars() *Scalars {
	if x != nil {
		return x.Scalars
	}
	return nil
}

func (x *Composed) GetMaps() []*Maps {
	if x != nil {
		return x.Maps
	}
	return nil
}

func (x *Composed) GetEnums() []*Enums {
	if x != nil {
		return x.Enums
	}
	return nil
}

var File_examples_validation_proto protoreflect.FileDescriptor

var file_examples_validation_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x1a, 0x1d, 0x63, 0x79, 0x62, 0x6f, 0x7a, 0x75, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3f, 0x0a, 0x07, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x66, 0x6f, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66,
	0x6f, 0x6f, 0x12, 0x1b, 0x0a, 0x03, 0x62, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x09, 0xc2, 0xe6, 0xc3, 0x01, 0x04, 0x1a, 0x02, 0x08, 0x64, 0x52, 0x03, 0x62, 0x61, 0x72, 0x3a,
	0x05, 0xc0, 0xe6, 0xc3, 0x01, 0x01, 0x22, 0xb0, 0x04, 0x0a, 0x07, 0x53, 0x63, 0x61, 0x6c, 0x61,
	0x72, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x42, 0x0c, 0xc2, 0xe6, 0xc3, 0x01, 0x07, 0x0a, 0x05, 0x0d, 0xcd, 0xcc, 0x4c, 0x40, 0x52,
	0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x42, 0x10, 0xc2, 0xe6, 0xc3, 0x01, 0x0b, 0x12, 0x09, 0x19,
	0x9a, 0x99, 0x99, 0x99, 0x99, 0x99, 0x09, 0x40, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x12, 0x28, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x42,
	0x12, 0xc2, 0xe6, 0xc3, 0x01, 0x0d, 0x1a, 0x0b, 0x10, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x01, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1f, 0x0a, 0x05, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x09, 0xc2, 0xe6, 0xc3, 0x01, 0x04,
	0x22, 0x02, 0x20, 0x01, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x23, 0x0a, 0x06, 0x75,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0b, 0xc2, 0xe6, 0xc3,
	0x01, 0x06, 0x2a, 0x04, 0x08, 0x05, 0x18, 0x01, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x12, 0x23, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x0b, 0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x32, 0x04, 0x10, 0x05, 0x20, 0x01, 0x52, 0x06, 0x75,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x11, 0x42, 0x0b, 0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x3a, 0x04, 0x08, 0x05,
	0x18, 0x01, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x42, 0x0b, 0xc2, 0xe6, 0xc3, 0x01,
	0x06, 0x42, 0x04, 0x10, 0x05, 0x20, 0x01, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12,
	0x25, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20, 0x01, 0x28, 0x07,
	0x42, 0x0b, 0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x4a, 0x04, 0x08, 0x05, 0x18, 0x01, 0x52, 0x07, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x25, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36,
	0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x42, 0x0b, 0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x52, 0x04,
	0x08, 0x05, 0x18, 0x01, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x27, 0x0a,
	0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x42,
	0x0b, 0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x5a, 0x04, 0x08, 0x05, 0x18, 0x01, 0x52, 0x08, 0x73, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12, 0x27, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x36, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x10, 0x42, 0x0b, 0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x62,
	0x04, 0x08, 0x05, 0x18, 0x01, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x62,
	0x6f, 0x6f, 0x6c, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0b, 0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x03,
	0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xc2, 0xe6, 0xc3, 0x01, 0x04, 0x7a, 0x02,
	0x20, 0x0a, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0xa8, 0x06, 0x0a, 0x0f, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x12, 0x27, 0x0a,
	0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x42, 0x0c, 0xc2, 0xe6,
	0xc3, 0x01, 0x07, 0x0a, 0x05, 0x0d, 0xcd, 0xcc, 0x4c, 0x40, 0x48, 0x00, 0x52, 0x05, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x42, 0x10, 0xc2, 0xe6, 0xc3, 0x01, 0x0b, 0x12, 0x09, 0x19,
	0x9a, 0x99, 0x99, 0x99, 0x99, 0x99, 0x09, 0x40, 0x48, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x42, 0x12, 0xc2, 0xe6, 0xc3, 0x01, 0x0d, 0x1a, 0x0b, 0x10, 0xfd, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x48, 0x02, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x09, 0xc2, 0xe6, 0xc3, 0x01, 0x04, 0x22, 0x02, 0x20, 0x01, 0x48, 0x03,
	0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x06, 0x75, 0x69,
	0x6e, 0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x0b, 0xc2, 0xe6, 0xc3, 0x01,
	0x06, 0x2a, 0x04, 0x08, 0x05, 0x18, 0x01, 0x48, 0x04, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x42, 0x0b, 0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x32, 0x04, 0x10, 0x05, 0x20,
	0x01, 0x48, 0x05, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x28,
	0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x11, 0x42, 0x0b,
	0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x3a, 0x04, 0x08, 0x05, 0x18, 0x01, 0x48, 0x06, 0x52, 0x06, 0x73,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x12, 0x42, 0x0b, 0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x42,
	0x04, 0x10, 0x05, 0x20, 0x01, 0x48, 0x07, 0x52, 0x06, 0x73, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x88,
	0x01, 0x01, 0x12, 0x2a, 0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x07, 0x42, 0x0b, 0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x4a, 0x04, 0x08, 0x05, 0x18, 0x01,
	0x48, 0x08, 0x52, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x2a,
	0x0a, 0x07, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x06, 0x42,
	0x0b, 0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x52, 0x04, 0x10, 0x05, 0x20, 0x01, 0x48, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0f, 0x42, 0x0b, 0xc2, 0xe6,
	0xc3, 0x01, 0x06, 0x5a, 0x04, 0x08, 0x05, 0x18, 0x01, 0x48, 0x0a, 0x52, 0x08, 0x73, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x66, 0x69, 0x78,
	0x65, 0x64, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x10, 0x42, 0x0b, 0xc2, 0xe6, 0xc3, 0x01,
	0x06, 0x62, 0x04, 0x10, 0x05, 0x20, 0x01, 0x48, 0x0b, 0x52, 0x08, 0x73, 0x66, 0x69, 0x78, 0x65,
	0x64, 0x36, 0x34, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x88, 0x01, 0x01, 0x12,
	0x28, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0b, 0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x03, 0x48, 0x0d, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x05, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x09, 0xc2, 0xe6, 0xc3, 0x01, 0x04, 0x7a,
	0x02, 0x20, 0x0a, 0x48, 0x0e, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x75, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x73, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x73, 0x66,
	0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x42, 0x11, 0xc2, 0xe6, 0xc3, 0x01, 0x0c, 0x0a, 0x05,
	0x0d, 0xcd, 0xcc, 0x4c, 0x40, 0xc2, 0x3e, 0x02, 0x08, 0x01, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61,
	0x74, 0x12, 0x2d, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x01, 0x42, 0x15, 0xc2, 0xe6, 0xc3, 0x01, 0x10, 0x12, 0x09, 0x19, 0x9a, 0x99, 0x99, 0x99, 0x99,
	0x99, 0x09, 0x40, 0xc2, 0x3e, 0x02, 0x10, 0x03, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x12, 0x22, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x0a, 0xc2, 0xe6, 0xc3, 0x01, 0x05, 0xc2, 0x3e, 0x02, 0x08, 0x02, 0x52, 0x06, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x22, 0x97, 0x02, 0x0a, 0x07, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x73, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x31,
	0x12, 0x19, 0x0a, 0x02, 0x73, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xc2, 0xe6,
	0xc3, 0x01, 0x04, 0x72, 0x02, 0x08, 0x01, 0x52, 0x02, 0x73, 0x32, 0x12, 0x1b, 0x0a, 0x02, 0x73,
	0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xc2, 0xe6, 0xc3, 0x01, 0x06, 0x72, 0x04,
	0x10, 0x01, 0x18, 0x0a, 0x52, 0x02, 0x73, 0x33, 0x12, 0x19, 0x0a, 0x02, 0x73, 0x34, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xc2, 0xe6, 0xc3, 0x01, 0x04, 0x72, 0x02, 0x08, 0x64, 0x52,
	0x02, 0x73, 0x34, 0x12, 0x19, 0x0a, 0x02, 0x73, 0x35, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xc2, 0xe6, 0xc3, 0x01, 0x04, 0x72, 0x02, 0x08, 0x65, 0x52, 0x02, 0x73, 0x35, 0x12, 0x19,
	0x0a, 0x02, 0x73, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xc2, 0xe6, 0xc3, 0x01,
	0x04, 0x72, 0x02, 0x08, 0x66, 0x52, 0x02, 0x73, 0x36, 0x12, 0x1d, 0x0a, 0x02, 0x73, 0x37, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xc2, 0xe6, 0xc3, 0x01, 0x08, 0x72, 0x06, 0x2a, 0x04,
	0x5e, 0x61, 0x62, 0x63, 0x52, 0x02, 0x73, 0x37, 0x12, 0x1a, 0x0a, 0x02, 0x73, 0x38, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xc2, 0xe6, 0xc3, 0x01, 0x05, 0x72, 0x03, 0xa0, 0x06, 0x01,
	0x52, 0x02, 0x73, 0x38, 0x12, 0x1a, 0x0a, 0x02, 0x73, 0x39, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0xc2, 0xe6, 0xc3, 0x01, 0x05, 0x72, 0x03, 0xa8, 0x06, 0x01, 0x52, 0x02, 0x73, 0x39,
	0x12, 0x1c, 0x0a, 0x03, 0x73, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xc2,
	0xe6, 0xc3, 0x01, 0x05, 0x72, 0x03, 0xb0, 0x06, 0x01, 0x52, 0x03, 0x73, 0x31, 0x30, 0x22, 0xed,
	0x03, 0x0a, 0x04, 0x4d, 0x61, 0x70, 0x73, 0x12, 0x3c, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x31, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42,
	0x0e, 0xc2, 0xe6, 0xc3, 0x01, 0x09, 0x1a, 0x02, 0x18, 0x03, 0xca, 0x3e, 0x02, 0x08, 0x01, 0x52,
	0x04, 0x6d, 0x61, 0x70, 0x31, 0x12, 0x38, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x32, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x4d,
	0x61, 0x70, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x32, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x0a, 0xc2,
	0xe6, 0xc3, 0x01, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x52, 0x04, 0x6d, 0x61, 0x70, 0x32, 0x12,
	0x2c, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x33, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x4d, 0x61,
	0x70, 0x33, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6d, 0x61, 0x70, 0x33, 0x12, 0x2c, 0x0a,
	0x04, 0x6d, 0x61, 0x70, 0x34, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x34,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x6d, 0x61, 0x70, 0x34, 0x1a, 0x37, 0x0a, 0x09, 0x4d,
	0x61, 0x70, 0x31, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x1a, 0x53, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x32, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x37, 0x0a, 0x09, 0x4d, 0x61, 0x70,
	0x33, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x4a, 0x0a, 0x09, 0x4d, 0x61, 0x70, 0x34, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x61, 0x6c,
	0x61, 0x72, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x97,
	0x02, 0x0a, 0x05, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x30, 0x0a, 0x02, 0x65, 0x31, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e,
	0x45, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x0a, 0xc2, 0xe6, 0xc3, 0x01,
	0x05, 0x82, 0x01, 0x02, 0x08, 0x01, 0x52, 0x02, 0x65, 0x31, 0x12, 0x30, 0x0a, 0x02, 0x65, 0x32,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x0a, 0xc2, 0xe6,
	0xc3, 0x01, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x02, 0x65, 0x32, 0x12, 0x35, 0x0a, 0x02,
	0x65, 0x33, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x0f,
	0xc2, 0xe6, 0xc3, 0x01, 0x0a, 0x82, 0x01, 0x02, 0x08, 0x01, 0xc2, 0x3e, 0x02, 0x08, 0x02, 0x52,
	0x02, 0x65, 0x33, 0x12, 0x37, 0x0a, 0x02, 0x65, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x73,
	0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x0c, 0xc2, 0xe6, 0xc3, 0x01, 0x07, 0x82, 0x01, 0x04, 0x08,
	0x01, 0x10, 0x01, 0x48, 0x00, 0x52, 0x02, 0x65, 0x34, 0x88, 0x01, 0x01, 0x22, 0x33, 0x0a, 0x04,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x5f, 0x56, 0x41, 0x4c,
	0x31, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x5f, 0x56, 0x41, 0x4c, 0x31, 0x30, 0x30, 0x10,
	0x64, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x65, 0x34, 0x22, 0xa5, 0x01, 0x0a, 0x06, 0x4f, 0x6e, 0x65,
	0x6f, 0x66, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x42, 0x12, 0xc2, 0xe6, 0xc3, 0x01, 0x0d, 0x1a, 0x0b, 0x10, 0xfd, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x12,
	0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x02, 0x74, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x48, 0x01, 0x52, 0x02, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x42, 0x04, 0x0a,
	0x02, 0x6f, 0x31, 0x42, 0x0b, 0x0a, 0x02, 0x6f, 0x32, 0x12, 0x05, 0xc0, 0xe6, 0xc3, 0x01, 0x01,
	0x22, 0xc7, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x37, 0x0a,
	0x07, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x64, 0x42, 0x0a, 0xc2, 0xe6, 0xc3, 0x01, 0x05, 0x8a, 0x01, 0x02, 0x08, 0x01, 0x52, 0x07, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x73, 0x63, 0x61, 0x6c, 0x61, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x2e, 0x53, 0x63, 0x61, 0x6c, 0x61, 0x72, 0x73, 0x52, 0x07, 0x73, 0x63, 0x61, 0x6c,
	0x61, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x04, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x70,
	0x73, 0x52, 0x04, 0x6d, 0x61, 0x70, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x42, 0x0a, 0xc2, 0xe6, 0xc3, 0x01, 0x05, 0x8a, 0x01,
	0x02, 0x08, 0x01, 0x52, 0x05, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x42, 0x22, 0x5a, 0x20, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x79, 0x62, 0x6f, 0x7a, 0x75, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_examples_validation_proto_rawDescOnce sync.Once
	file_examples_validation_proto_rawDescData = file_examples_validation_proto_rawDesc
)

func file_examples_validation_proto_rawDescGZIP() []byte {
	file_examples_validation_proto_rawDescOnce.Do(func() {
		file_examples_validation_proto_rawDescData = protoimpl.X.CompressGZIP(file_examples_validation_proto_rawDescData)
	})
	return file_examples_validation_proto_rawDescData
}

var file_examples_validation_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_examples_validation_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_examples_validation_proto_goTypes = []interface{}{
	(Enums_Enum)(0),               // 0: examples.Enums.Enum
	(*Ignored)(nil),               // 1: examples.Ignored
	(*Scalars)(nil),               // 2: examples.Scalars
	(*OptionalScalars)(nil),       // 3: examples.OptionalScalars
	(*RepeatedScalars)(nil),       // 4: examples.RepeatedScalars
	(*Strings)(nil),               // 5: examples.Strings
	(*Maps)(nil),                  // 6: examples.Maps
	(*Enums)(nil),                 // 7: examples.Enums
	(*Oneofs)(nil),                // 8: examples.Oneofs
	(*Composed)(nil),              // 9: examples.Composed
	nil,                           // 10: examples.Maps.Map1Entry
	nil,                           // 11: examples.Maps.Map2Entry
	nil,                           // 12: examples.Maps.Map3Entry
	nil,                           // 13: examples.Maps.Map4Entry
	(*timestamppb.Timestamp)(nil), // 14: google.protobuf.Timestamp
}
var file_examples_validation_proto_depIdxs = []int32{
	10, // 0: examples.Maps.map1:type_name -> examples.Maps.Map1Entry
	11, // 1: examples.Maps.map2:type_name -> examples.Maps.Map2Entry
	12, // 2: examples.Maps.map3:type_name -> examples.Maps.Map3Entry
	13, // 3: examples.Maps.map4:type_name -> examples.Maps.Map4Entry
	0,  // 4: examples.Enums.e1:type_name -> examples.Enums.Enum
	0,  // 5: examples.Enums.e2:type_name -> examples.Enums.Enum
	0,  // 6: examples.Enums.e3:type_name -> examples.Enums.Enum
	0,  // 7: examples.Enums.e4:type_name -> examples.Enums.Enum
	14, // 8: examples.Oneofs.ts:type_name -> google.protobuf.Timestamp
	1,  // 9: examples.Composed.ignored:type_name -> examples.Ignored
	2,  // 10: examples.Composed.scalars:type_name -> examples.Scalars
	6,  // 11: examples.Composed.maps:type_name -> examples.Maps
	7,  // 12: examples.Composed.enums:type_name -> examples.Enums
	14, // 13: examples.Maps.Map2Entry.value:type_name -> google.protobuf.Timestamp
	2,  // 14: examples.Maps.Map4Entry.value:type_name -> examples.Scalars
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_examples_validation_proto_init() }
func file_examples_validation_proto_init() {
	if File_examples_validation_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_examples_validation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ignored); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_validation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scalars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_validation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionalScalars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_validation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RepeatedScalars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_validation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Strings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_validation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Maps); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_validation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Enums); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_validation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Oneofs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_examples_validation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Composed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_examples_validation_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_examples_validation_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_examples_validation_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*Oneofs_Int32)(nil),
		(*Oneofs_String_)(nil),
		(*Oneofs_Ts)(nil),
		(*Oneofs_Bool)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_examples_validation_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_examples_validation_proto_goTypes,
		DependencyIndexes: file_examples_validation_proto_depIdxs,
		EnumInfos:         file_examples_validation_proto_enumTypes,
		MessageInfos:      file_examples_validation_proto_msgTypes,
	}.Build()
	File_examples_validation_proto = out.File
	file_examples_validation_proto_rawDesc = nil
	file_examples_validation_proto_goTypes = nil
	file_examples_validation_proto_depIdxs = nil
}
